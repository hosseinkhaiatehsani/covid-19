{"version":3,"sources":["components/custom-input/custom-input.component.jsx","components/card/card.component.jsx","components/search-result/search-result.component.jsx","components/spinner/spinner.component.jsx","components/search/search.component.jsx","App.js","index.js"],"names":["CustomInput","props","className","Card","title","otherProps","keys","Object","result_numbers","values","map","item","index","SearchResult","data","continent","country","cases","deaths","tests","population","active","critical","total","new","recovered","Spinner","Search","useState","countryList","setCountryList","setCountry","Date","toISOString","split","dateRange","setDateRange","selectedCountry","setSelectedCountry","result","setResult","useEffect","fetch","method","headers","process","then","response","json","countries","catch","err","console","error","params","URLSearchParams","day","countryMapList","value","type","list","placeholder","onChange","e","target","indexOf","id","onInput","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df625fa4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./custom-input.styles.css\";\r\n\r\nconst CustomInput = ({ ...props }) => {\r\n    return (\r\n        <div className=\"custom-input\">\r\n            <input className=\"custom-input__search-box\" {...props} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomInput;\r\n","import React from \"react\";\r\n\r\nimport \"./card.styles.css\";\r\n\r\nconst Card = ({ className, title, ...otherProps }) => {\r\n    const keys = Object.keys({ ...otherProps });\r\n    const result_numbers = Object.values({ ...otherProps });\r\n    return (\r\n        <div className={`card ${className}`}>\r\n            <h3 className=\"card__title\">{title}</h3>\r\n            {keys.map((item, index) => {\r\n                return (\r\n                    <div className=\"card-data\" key={index}>\r\n                        <strong className=\"card-data__label\">\r\n                            {item === \"active\" ? \"Today\" : item}:\r\n                        </strong>{\" \"}\r\n                        {result_numbers[index] !== null\r\n                            ? result_numbers[index]\r\n                            : \"No Data\"}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"../card/card.component\";\r\n\r\nimport \"./search-result.styles.css\";\r\n\r\nconst SearchResult = ({ data }) => {\r\n    const { continent, country, cases, deaths, tests, population } = data;\r\n    return (\r\n        <section>\r\n            <div className=\"country-info\">\r\n                <h2>{`${continent} / ${country}`}</h2>\r\n                <h3>Population: {population}</h3>\r\n            </div>\r\n            <div className=\"card-container\">\r\n                <Card\r\n                    title=\"cases\"\r\n                    className=\"gray\"\r\n                    active={cases.active}\r\n                    critical={cases.critical}\r\n                    total={cases.total}\r\n                />\r\n\r\n                <Card\r\n                    title=\"deaths\"\r\n                    className=\"red\"\r\n                    active={deaths.new}\r\n                    total={deaths.total}\r\n                />\r\n\r\n                <Card title=\"tests\" className=\"orange\" total={tests.total} />\r\n\r\n                <Card\r\n                    title=\"recovered\"\r\n                    className=\"green\"\r\n                    recovered={cases.recovered}\r\n                />\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SearchResult;\r\n","import React from \"react\";\r\n\r\nimport \"./spinner.styles.css\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner-container\">\r\n            <div className=\"spinner\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React, { useState, useEffect } from \"react\";\r\nimport CustomInput from \"../custom-input/custom-input.component\";\r\nimport SearchResult from \"../search-result/search-result.component\";\r\nimport Spinner from \"../spinner/spinner.component\";\r\n\r\nimport \"./search.styles.css\";\r\n\r\nconst Search = () => {\r\n    const [countryList, setCountryList] = useState([]);\r\n    // use only to handle the input changes\r\n    const [country, setCountry] = useState(\"germany\");\r\n\r\n    // set the selected date\r\n    const [dateRange, setDateRange] = useState(\r\n        new Date().toISOString().split(\"T\")[0]\r\n    );\r\n\r\n    // if value of input find in list then this state will set to input value\r\n    const [selectedCountry, setSelectedCountry] = useState(country);\r\n    const [result, setResult] = useState(null);    \r\n\r\n    // execute only one time to fetch country list\r\n    useEffect(() => {\r\n        fetch(`https://covid-193.p.rapidapi.com/countries`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": process.env.REACT_APP_RAPID_API_KEY,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                response.json().then((data) => {\r\n                    const countries = data.response;\r\n                    setCountryList(countries);\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }, []);\r\n\r\n    // fetch data for selected country and selected dataRange\r\n    useEffect(() => {\r\n        // create a parameter to use in fetch\r\n        const params = new URLSearchParams({\r\n            country: selectedCountry,\r\n            day: dateRange,\r\n        });\r\n\r\n        fetch(`https://covid-193.p.rapidapi.com/history?${params}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": process.env.REACT_APP_RAPID_API_KEY,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                response.json().then((data) => {\r\n                    setResult(data.response[0]);\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }, [selectedCountry, dateRange]);\r\n\r\n    const countryMapList = countryList.map((country, index) => {\r\n        return (\r\n            <option value={country} key={index}>\r\n                {country}\r\n            </option>\r\n        );\r\n    });\r\n\r\n    const countrySearchHandler = (e) => {\r\n        let country = e.target.value;\r\n        setCountry(country);\r\n\r\n        // prevnet rendering with every character input\r\n        if (countryList.indexOf(country) !== -1) {\r\n            setSelectedCountry(country);\r\n        }\r\n    };\r\n\r\n    const datePickerHandler = (e) => {\r\n        setDateRange(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <div className=\"search-container__inputs\">\r\n                <CustomInput\r\n                    type=\"search\"\r\n                    value={country}\r\n                    list=\"countries\"\r\n                    placeholder=\"Search For Topics...\"\r\n                    onChange={countrySearchHandler}\r\n                />\r\n                <datalist id=\"countries\">{countryMapList}</datalist>\r\n                <CustomInput\r\n                    type=\"date\"\r\n                    value={dateRange}\r\n                    onInput={datePickerHandler}\r\n                />\r\n            </div>\r\n            { result ? <SearchResult data={result} /> : <Spinner />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import Search from \"./components/search/search.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <main className=\"App\">\r\n      <Search />      \r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}